/* 节点表 */
create table nodes(	
	node_index      VARCHAR2(32),
	monitor_ip      VARCHAR2(15),
	monitor_port    NUMBER(6),  
	alias           VARCHAR2(20),
	inserted_times  VARCHAR2(14),
	running_status  NUMBER(2),    /* 开启  停止 */
	server_type     NUMBER(2)     /* 进程监控 内存 磁盘监控 备份监控 数据库监控 业务监控*/
);

alter table NODES
  add constraint NODE_INDEX primary key (NODE_INDEX)
  using index 
  tablespace SYSMONITOR_DATA
;


/* 监控时间调度配置表 */
create table node_scheduling(	
	node_index      VARCHAR2(32),
	monitor_ip      VARCHAR2(15)，
	server_type     NUMBER(2)     /* 进程监控 内存 磁盘监控 备份监控 数据库监控 业务监控*/
	interval_time   NUMBER(8)     /*  秒为单位 监控更新间隔*/
);

/* 节点基础信息一览 */
create table node_system_info (
	node_index	  VARCHAR2(32),            /* 监控节点唯一索引 */
	cpu_num           NUMBER(6),               /* cpu 个数 */
	cpu_process_info  VARCHAR2(64),            /* cpu 处理器型号信息 */
        opsys_info        VARCHAR2(32),            /*  主机操作系统信息 */
	mm_size		  VARCHAR2(12),    	   /*  主机内存 M*/
	mm_free_size      VARCHAR2(12),            /* 可用内存 M*/
	hd_size           VARCHAR2(12),            /* 磁盘总空间  KB*/
	hd_free_size      VARCHAR2(12)            /* 磁盘剩余空间 KB*/
);
/* 磁盘信息 */
create table node_hd_info (
	node_index	  VARCHAR2(32),     /* 监控节点唯一索引 */
	hd_no             VARCHAR2(32),     /* 挂接点名称 */
	hd_no_size        VARCHAR2(12),     /* 挂接点大小 */
	hd_used_size      VARCHAR2(12),     /* 挂接点已使用大小 */
	hd_free_size      VARCHAR2(12),     /* 挂接点剩余大小 */
	hd_threhold       VARCHAR2(6)       /* 报警阀值百分比 */
	hd_usepercent     VARCHAR2(6)       /* 已使用百分比 */ 
	inserted_times    VARCHAR2(14),
);
/* 磁盘数据采集 */



create table node_hd_collect (
	node_index	  VARCHAR2(32),     /* 监控节点唯一索引 */
	hd_no             VARCHAR2(32),     /* 挂接点名称 */
	hd_no_size        VARCHAR2(12),     /* 挂接点大小 */
	hd_used_size      VARCHAR2(12),     /* 挂接点已使用大小 */
	hd_free_size      VARCHAR2(12),     /* 挂接点剩余大小 */
	hd_threhold       VARCHAR2(6)       /* 报警阀值百分比 */
	hd_usepercent     VARCHAR2(6)       /* 已使用百分比 */ 
	inserted_times    VARCHAR2(14),
);
alter table NODE_HD_COLLECT
  add constraint NODE_HD_COLLINDEX primary key (NODE_INDEX, HD_NO, INSERTED_TIMES)
  using index 
  tablespace SYSMONITOR_DATA
 ;


/* 内存信息 */
create table node_mm_info (
	node_index	  VARCHAR2(32),     /* 监控节点唯一索引 */	
	mm_size           VARCHAR2(12),     /* 内存总大小 */	
	mm_used		  VARCHAR2(12),     /* 内存已使用大小 */
	mm_free           VARCHAR2(6),       /* 内存未使用大小 */
	swap_size         VARCHAR2(12),      /* swap 大小 */
	swap_used         VARCHAR2(12),      /* swap 已用大小 */
	swap_free         VARCHAR2(12),      /* swap 未用大小 */
	inserted_times    VARCHAR2(14),

);
alter table NODE_HD_INFO
  add constraint NODE_HD_INFOINDEX primary key (NODE_INDEX, HD_NO)
  using index 
  tablespace SYSMONITOR_DATA
 ;


/* 内存信息采集 */

create table node_mm_collect (
	node_index	  VARCHAR2(32),     /* 监控节点唯一索引 */	
	mm_size           VARCHAR2(12),     /* 内存总大小 */	
	mm_used		  VARCHAR2(12),     /* 内存已使用大小 */
	mm_free           VARCHAR2(6),       /* 内存未使用大小 */
	swap_size         VARCHAR2(12),      /* swap 大小 */
	swap_used         VARCHAR2(12),      /* swap 已用大小 */
	swap_free         VARCHAR2(12),      /* swap 未用大小 */
	inserted_times    VARCHAR2(14)

);



/* 进程信息 */
create table node_process_info (
	node_index	  VARCHAR2(32), /* 监控节点唯一索引 */
	process_no        VARCHAR2(60), /* 进程名称 */
	process_desc      VARCHAR2(60), /* 进程描述 */
	process_status    VARCHAR2(5),  /* 进程状态 */
	process_runnum    NUMBER(3),     /* 运行个数 */
	process_setnum    NUMBER(3)     /* 设置个数 */
	inserted_times    VARCHAR2(14)  /* 更新时间 */
)

/* 进程信息采集 */
create table node_process_collect (
	node_index	  VARCHAR2(32), /* 监控节点唯一索引 */
	process_no        VARCHAR2(60), /* 进程 */
	process_status    VARCHAR2(5),  /* 进程状态 */
	process_runnum    NUMBER(3),     /* 运行个数 */
	process_setnum    NUMBER(3)     /* 设置个数 */
	inserted_times    VARCHAR2(14)  /* 更新时间 */
)


/* 节点备份结果 */
create table node_backup_info (
	node_index	  VARCHAR2(32),  
	backup_no	  VARCHAR2(32),    /* 路径索引 */
	backup_servers    NUMBER(4),       /* 总项 */
	backup_time       VARCHAR2(8),   
	backup_prename    VARCHAR2(20),    /* 压缩项 */ 
	backup_dir    	  VARCHAR2(128),   /* 压缩项 */ 
	backup_interval   NUMBER(4),       /* 压缩项 */ 
	ftp_username      VARCHAR2(32),   
	ftp_passwd        VARCHAR2(32),   
	ftp_ip 		  VARCHAR2(15),   
	ftp_port 	  VARCHAR2(6),   
	ftp_path 	  VARCHAR2(128),   
	del_interval      NUMBER(4),       /* 删除项 */
	inserted_times    VARCHAR2(14)    
)
/* 节点备份结果采集 */
create table node_backup_collect (
	node_index	  VARCHAR2(32),  
	backupexec_times  VARCHAR2(14)   
	backup_servers    NUMBER(4),     
	backup_resultdesc VARCHAR2(1024),    
	inserted_times    VARCHAR2(14)     
)
/* 事件 */
create table node_event (
	node_index	  VARCHAR2(32),   /* 监控节点唯一索引 */
	event_type        VARCHAR2(5),    /* 事件类型暂定三类 进程监控 内存 磁盘监控 备份监控 数据库监控 业务监控*/
	event_time        VARCHAR2(14),   /* 事件发生时间 */
	event_priority    VARCHAR2(4), 	  /* 事件优先级 普通 紧急 */
	event_desc        VARCHAR2(512)   /* 事件描述 */
)

create table NODE_SYSTEM_INFO
(
  NODE_INDEX       VARCHAR2(32) not null,
  CPU_NUM          NUMBER(6),
  CPU_PROCESS_INFO VARCHAR2(64),
  OPSYS_INFO       VARCHAR2(32),
  MM_SIZE          VARCHAR2(12),
  MM_FREE_SIZE     VARCHAR2(12),
  HD_SIZE          VARCHAR2(12),
  HD_FREE_SIZE     VARCHAR2(12)
)


alter table NODE_SYSTEM_INFO
  add constraint SYS_NODE_INDEX primary key (NODE_INDEX)
  using index 
  tablespace SYSMONITOR_DATA
  ;

create table node_oraclealertpath_info (
	node_index	  VARCHAR2(32),     /* 监控节点唯一索引 */
	logpath           VARCHAR2(256),     /* 挂接点名称 */
	inserted_times    VARCHAR2(14),
);
/* 监控类型 */
		---------------------------------------------------
		进程监控 内存 磁盘监控 备份监控 数据库监控 业务监控
		---------------------------------------------------
索引index	1        2      3        4        5           6  
类型值value	1        2      4        8        16          32  
		---------------------------------------------------
例如: 
进程监控 内存监控 两项监控  servertyp Value = sum (value of index ) = 1 + 2 = 3;
进程监控 内存 磁盘监控 备份监控 数据库监控  servertyp Value = 1 + 2 + 4 + 8 + 15 = 31


/*create db script*/

create temporary tablespace sysmonitor_temp
tempfile '/u01/app/oracle/oradata/monidb/sysmonitor_temp.dbf'
size 32m
autoextend on
next 32m maxsize 2048m
extent management local; 

create tablespace sysmonitor_data
logging
datafile '/u01/app/oracle/oradata/monidb/sysmonitor_data.dbf'
size 32m
autoextend on
next 32m maxsize 2048m
extent management local; 

create user sysmonitor identified by sysmonitor
default tablespace sysmonitor_data
temporary tablespace sysmonitor_temp; 

grant connect,resource to sysmonitor; 



